"{\"value\":{\"code\":\"import { optimism } from 'viem/chains' // [!code focus]\\n\\nconst signature = await walletClient.signTransaction({\\n  chain: optimism, // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\\nimport optimism\",\"start\":9,\"length\":8,\"target\":\"optimism\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":63,\"length\":9,\"target\":\"signature\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":81,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}, {\\n    ...;\\n}>(args: SignTransactionParameters<...>) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":94,\"length\":15,\"target\":\"signTransaction\",\"line\":2,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) chain: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\",\"start\":114,\"length\":5,\"target\":\"chain\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\\nimport optimism\",\"start\":121,\"length\":8,\"target\":\"optimism\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":150,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":161,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":213,\"length\":5,\"target\":\"value\",\"line\":6,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,259]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":246,\"end\":259}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nimport { optimism } from 'viem/chains' // [!code focus]\\n\\nconst signature = await walletClient.signTransaction({\\n  chain: optimism, // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\\nimport optimism\",\"start\":9,\"length\":8,\"target\":\"optimism\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":63,\"length\":9,\"target\":\"signature\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":81,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}, {\\n    ...;\\n}>(args: SignTransactionParameters<...>) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":94,\"length\":15,\"target\":\"signTransaction\",\"line\":2,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) chain: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\",\"start\":114,\"length\":5,\"target\":\"chain\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 2000;\\n    contracts: {\\n        readonly disputeGameFactory: {\\n            readonly 1: {\\n                readonly address: \\\"0xe5965Ab5962eDc7477C8520243A95517CD252fA9\\\";\\n            };\\n        };\\n        readonly l2OutputOracle: {\\n            readonly 1: {\\n                readonly address: \\\"0xdfe97868233d1aa22e815a266982f2cf17685a27\\\";\\n            };\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 4286263;\\n        };\\n        ... 7 more ...;\\n        readonly l2ToL1MessagePasser: {\\n            ...;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers: {\\n        ...;\\n    };\\n}\\nimport optimism\",\"start\":121,\"length\":8,\"target\":\"optimism\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":150,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":161,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":213,\"length\":5,\"target\":\"value\",\"line\":6,\"character\":2}],\"tags\":[]}}"

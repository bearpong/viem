"{\"value\":{\"code\":\"import { parseAbi } from 'viem'\\nimport { walletClient } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n])\\n \\nconst status = await walletClient.sendCallsSync({\\n  calls: [\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1')\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi, // [!code focus:6]\\n      functionName: 'approve',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n        100n\\n      ],\\n    }\\n  ],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":41,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\",\"start\":79,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\"]): readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":85,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const status: {\\n    id: string;\\n    chainId: number;\\n    atomic: boolean;\\n    capabilities?: {\\n        [key: string]: any;\\n    } | {\\n        [x: string]: any;\\n    } | undefined;\\n    receipts?: WalletCallReceipt<bigint, \\\"success\\\" | \\\"reverted\\\">[] | undefined;\\n    version: string;\\n    statusCode: number;\\n    status: \\\"pending\\\" | \\\"success\\\" | \\\"failure\\\" | undefined;\\n}\",\"start\":162,\"length\":6,\"target\":\"status\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":177,\"length\":12,\"target\":\"walletClient\",\"line\":7,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCallsSync: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [{\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly outputs: readonly [{\\n            readonly type: \\\"bool\\\";\\n        }];\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", 100n];\\n}], undefined>(parameters: SendCallsSyncParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined, readonly [...]>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls, and waits for the calls to be included in a block.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCallsSync\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Calls status. {@link SendCallsSyncReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst status = await client.sendCallsSync({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":190,\"length\":13,\"target\":\"sendCallsSync\",\"line\":7,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [{\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly outputs: readonly [{\\n            readonly type: \\\"bool\\\";\\n        }];\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", 100n];\\n}, {}>>]\",\"start\":208,\"length\":5,\"target\":\"calls\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":229,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":285,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":292,\"length\":10,\"target\":\"parseEther\",\"line\":11,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":327,\"length\":2,\"target\":\"to\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\",\"start\":383,\"length\":3,\"target\":\"abi\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\"\",\"start\":413,\"length\":12,\"target\":\"functionName\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, bigint]\",\"start\":444,\"length\":4,\"target\":\"args\",\"line\":17,\"character\":6}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1337]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":316,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":649,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":982,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1298,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseAbi } from 'viem'\\nimport { walletClient } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n])\\n \\nconst status = await walletClient.sendCallsSync({\\n  calls: [\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1')\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi, // [!code focus:6]\\n      functionName: 'approve',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n        100n\\n      ],\\n    }\\n  ],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":41,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\",\"start\":79,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\"]): readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":85,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const status: {\\n    id: string;\\n    chainId: number;\\n    atomic: boolean;\\n    capabilities?: {\\n        [key: string]: any;\\n    } | {\\n        [x: string]: any;\\n    } | undefined;\\n    receipts?: WalletCallReceipt<bigint, \\\"success\\\" | \\\"reverted\\\">[] | undefined;\\n    version: string;\\n    statusCode: number;\\n    status: \\\"pending\\\" | \\\"success\\\" | \\\"failure\\\" | undefined;\\n}\",\"start\":162,\"length\":6,\"target\":\"status\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":177,\"length\":12,\"target\":\"walletClient\",\"line\":7,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCallsSync: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [{\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly outputs: readonly [{\\n            readonly type: \\\"bool\\\";\\n        }];\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", 100n];\\n}], undefined>(parameters: SendCallsSyncParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined, readonly [...]>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls, and waits for the calls to be included in a block.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCallsSync\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Calls status. {@link SendCallsSyncReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst status = await client.sendCallsSync({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":190,\"length\":13,\"target\":\"sendCallsSync\",\"line\":7,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [{\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly outputs: readonly [{\\n            readonly type: \\\"bool\\\";\\n        }];\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", 100n];\\n}, {}>>]\",\"start\":208,\"length\":5,\"target\":\"calls\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":229,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":285,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":292,\"length\":10,\"target\":\"parseEther\",\"line\":11,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":327,\"length\":2,\"target\":\"to\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"bool\\\";\\n    }];\\n}]\",\"start\":383,\"length\":3,\"target\":\"abi\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\"\",\"start\":413,\"length\":12,\"target\":\"functionName\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, bigint]\",\"start\":444,\"length\":4,\"target\":\"args\",\"line\":17,\"character\":6}],\"tags\":[]}}"

"{\"value\":{\"code\":\"import { account, publicClient } from './client'\\n\\nconst valid = await publicClient.verifyHash({\\n  address: account.address,\\n  hash: '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',\\n  signature: '0x...',\\n})\\n\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":18,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const valid: boolean\",\"start\":56,\"length\":5,\"target\":\"valid\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":70,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) verifyHash: (args: VerifyHashParameters) => Promise<VerifyHashReturnType>\",\"docs\":\"Verify that a hash was signed by the provided address.\\n\\n- Docs \\n{@link \\nhttps://viem.sh/docs/actions/public/verifyHash\\n}\",\"tags\":[[\"param\",\"parameters - {@link VerifyHashParameters}\"],[\"returns\",\"Whether or not the signature is valid. {@link VerifyHashReturnType}\"]],\"start\":83,\"length\":10,\"target\":\"verifyHash\",\"line\":2,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"The address that signed the original message.\",\"start\":98,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":107,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":11},{\"type\":\"hover\",\"text\":\"any\",\"start\":115,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) hash: `0x${string}`\",\"docs\":\"The hash to be verified.\",\"start\":126,\"length\":4,\"target\":\"hash\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) signature: `0x${string}` | ByteArray | Signature\",\"docs\":\"The signature that was generated by signing the message with the address's private key.\",\"start\":204,\"length\":9,\"target\":\"signature\",\"line\":5,\"character\":2},{\"type\":\"tag\",\"name\":\"log\",\"start\":227,\"length\":0,\"text\":\"true\",\"line\":8,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[786,800],[0,559]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ JSON-RPC Account\",\"start\":355,\"end\":383},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ Local Account\",\"start\":443,\"end\":468},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"true\",\"start\":786,\"end\":800}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum!)\\n})\\n\\n// @log: ↓ JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n\\n// @log: ↓ Local Account\\n\\n// export const account = privateKeyToAccount(...)\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":520,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { account, publicClient } from './client'\\n\\nconst valid = await publicClient.verifyHash({\\n  address: account.address,\\n  hash: '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',\\n  signature: '0x...',\\n})\\n// @log: true\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":18,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const valid: boolean\",\"start\":56,\"length\":5,\"target\":\"valid\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":70,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) verifyHash: (args: VerifyHashParameters) => Promise<VerifyHashReturnType>\",\"docs\":\"Verify that a hash was signed by the provided address.\\n\\n- Docs \\n{@link \\nhttps://viem.sh/docs/actions/public/verifyHash\\n}\",\"tags\":[[\"param\",\"parameters - {@link VerifyHashParameters}\"],[\"returns\",\"Whether or not the signature is valid. {@link VerifyHashReturnType}\"]],\"start\":83,\"length\":10,\"target\":\"verifyHash\",\"line\":2,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"The address that signed the original message.\",\"start\":98,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":107,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":11},{\"type\":\"hover\",\"text\":\"any\",\"start\":115,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) hash: `0x${string}`\",\"docs\":\"The hash to be verified.\",\"start\":126,\"length\":4,\"target\":\"hash\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) signature: `0x${string}` | ByteArray | Signature\",\"docs\":\"The signature that was generated by signing the message with the address's private key.\",\"start\":204,\"length\":9,\"target\":\"signature\",\"line\":5,\"character\":2}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":227,\"length\":0,\"text\":\"true\",\"line\":8,\"character\":0}]}}"

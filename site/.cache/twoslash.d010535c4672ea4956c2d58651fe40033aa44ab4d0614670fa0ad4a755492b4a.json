"{\"value\":{\"code\":\"const receipt = await walletClient.sendTransactionSync({\\n  account,\\n  maxFeePerGas: parseGwei('20'),\\n  maxPriorityFeePerGas: parseGwei('2'), // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const receipt: TransactionReceipt\",\"start\":6,\"length\":7,\"target\":\"receipt\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":22,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) sendTransactionSync: <{\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly maxPriorityFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionSyncParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly maxPriorityFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>) => Promise<SendTransactionSyncReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network synchronously.\\nReturns the transaction receipt.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransactionSync\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The transaction receipt. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst receipt = await client.sendTransactionSync({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst receipt = await client.sendTransactionSync({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":35,\"length\":19,\"target\":\"sendTransactionSync\",\"line\":0,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":59,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":70,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":84,\"length\":9,\"target\":\"parseGwei\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas: any\",\"start\":103,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":125,\"length\":9,\"target\":\"parseGwei\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":160,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":212,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":219,\"length\":10,\"target\":\"parseEther\",\"line\":5,\"character\":9}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,259]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":246,\"end\":259}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst receipt = await walletClient.sendTransactionSync({\\n  account,\\n  maxFeePerGas: parseGwei('20'),\\n  maxPriorityFeePerGas: parseGwei('2'), // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const receipt: TransactionReceipt\",\"start\":6,\"length\":7,\"target\":\"receipt\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":22,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) sendTransactionSync: <{\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly maxPriorityFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionSyncParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly maxPriorityFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>) => Promise<SendTransactionSyncReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network synchronously.\\nReturns the transaction receipt.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransactionSync\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The transaction receipt. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst receipt = await client.sendTransactionSync({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst receipt = await client.sendTransactionSync({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":35,\"length\":19,\"target\":\"sendTransactionSync\",\"line\":0,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":59,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":70,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":84,\"length\":9,\"target\":\"parseGwei\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas: any\",\"start\":103,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":125,\"length\":9,\"target\":\"parseGwei\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":160,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":212,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":219,\"length\":10,\"target\":\"parseEther\",\"line\":5,\"character\":9}],\"tags\":[]}}"

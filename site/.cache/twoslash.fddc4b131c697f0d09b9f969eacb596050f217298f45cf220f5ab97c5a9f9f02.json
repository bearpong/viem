"{\"value\":{\"code\":\"const receipt = await walletClient.sendRawTransactionSync({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33',\\n  throwOnReceiptRevert: true // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const receipt: TransactionReceipt\",\"start\":6,\"length\":7,\"target\":\"receipt\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":22,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) sendRawTransactionSync: (args: SendRawTransactionSyncParameters) => Promise<TransactionReceipt>\",\"docs\":\"Sends a **signed** transaction to the network synchronously,\\nand waits for the transaction to be included in a block.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransactionSync\\n- JSON-RPC Method: [`eth_sendRawTransactionSync`](https://eips.ethereum.org/EIPS/eip-7966)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionSyncParameters}\"],[\"returns\",\"The transaction receipt. {@link SendRawTransactionSyncReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransactionSync } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst receipt = await client.sendRawTransactionSync({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":35,\"length\":22,\"target\":\"sendRawTransactionSync\",\"line\":0,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) serializedTransaction: `0x${string}`\",\"docs\":\"The signed serialized transaction.\",\"start\":62,\"length\":21,\"target\":\"serializedTransaction\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) throwOnReceiptRevert?: boolean | undefined\",\"docs\":\"Whether to throw an error if the transaction was detected as reverted.\",\"tags\":[[\"default\",\"true\"]],\"start\":259,\"length\":20,\"target\":\"throwOnReceiptRevert\",\"line\":2,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,246]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\nconst receipt = await walletClient.sendRawTransactionSync({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33',\\n  throwOnReceiptRevert: true // [!code focus]\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const receipt: TransactionReceipt\",\"start\":6,\"length\":7,\"target\":\"receipt\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":22,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) sendRawTransactionSync: (args: SendRawTransactionSyncParameters) => Promise<TransactionReceipt>\",\"docs\":\"Sends a **signed** transaction to the network synchronously,\\nand waits for the transaction to be included in a block.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransactionSync\\n- JSON-RPC Method: [`eth_sendRawTransactionSync`](https://eips.ethereum.org/EIPS/eip-7966)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionSyncParameters}\"],[\"returns\",\"The transaction receipt. {@link SendRawTransactionSyncReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransactionSync } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst receipt = await client.sendRawTransactionSync({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":35,\"length\":22,\"target\":\"sendRawTransactionSync\",\"line\":0,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) serializedTransaction: `0x${string}`\",\"docs\":\"The signed serialized transaction.\",\"start\":62,\"length\":21,\"target\":\"serializedTransaction\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) throwOnReceiptRevert?: boolean | undefined\",\"docs\":\"Whether to throw an error if the transaction was detected as reverted.\",\"tags\":[[\"default\",\"true\"]],\"start\":259,\"length\":20,\"target\":\"throwOnReceiptRevert\",\"line\":2,\"character\":2}],\"tags\":[]}}"
